libevdev_get_abs_min(3)
=======================

NAME
----

libevdev_get_abs_min, libevdev_get_abs_max, libevdev_get_abs_fuzz, libevdev_get_abs_flat, libevdev_get_abs_resolution, libevdev_get_abs_info - get information about an absolut axis on this device

SYNOPSIS
--------

#include <libevdev/libevdev.h>

const struct input_absinfo* libevdev_get_abs_info(const struct libevdev *dev, unsigned int code);

int libevdev_get_abs_min(const struct libevdev *dev, unsigned int code);

int libevdev_get_abs_max(const struct libevdev *dev, unsigned int code);

int libevdev_get_abs_fuzz(const struct libevdev *dev, unsigned int code);

int libevdev_get_abs_flat(const struct libevdev *dev, unsigned int code);

int libevdev_get_abs_resolution(const struct libevdev *dev, unsigned int code);

DESCRIPTION
-----------
*libevdev_get_abs_info* returns the struct input_absinfo describing the axis
on this device. This struct contains the axis ranges for the given axis.

*libevdev_get_abs_min*, *libevdev_get_abs_max*, *libevdev_get_abs_fuzz*, *libevdev_get_abs_flat*,
*libevdev_get_abs_resolution* are convenience functions that return the
respective field from the struct input_absinfo for the given axis.

The caller must check if the axis is supported by the device first using
*libevdev_has_event_code(3)*.

PARAMETERS
----------
*dev*::
	Pointer to the libevdev device.
*code*::
	Axis code, ranging from ABS_X to ABS_MAX.

RETURN VALUE
------------
On success, *libevdev_get_abs_info* returns a pointer to the struct
input_absinfo. If the axis does not exist on the device or the axis code is
invalid, NULL is returned.

On success, *libevdev_get_abs_min*, *libevdev_get_abs_max*, *libevdev_get_abs_fuzz*, *libevdev_get_abs_flat*,
*libevdev_get_abs_resolution* return the respective value for this axis.
If the axis does not exist on the device or the axis code is invalid, the
return value is undefined.

SEE ALSO
--------

libevdev_has_event_type(3), libevdev_has_event_code(3)
